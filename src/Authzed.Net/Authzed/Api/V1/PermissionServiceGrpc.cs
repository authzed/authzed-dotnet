// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authzed/api/v1/permission_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Authzed.Api.V1 {
  /// <summary>
  /// PermissionsService implements a set of RPCs that perform operations on
  /// relationships and permissions.
  /// </summary>
  public static partial class PermissionsService
  {
    static readonly string __ServiceName = "authzed.api.v1.PermissionsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ReadRelationshipsRequest> __Marshaller_authzed_api_v1_ReadRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ReadRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ReadRelationshipsResponse> __Marshaller_authzed_api_v1_ReadRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ReadRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.WriteRelationshipsRequest> __Marshaller_authzed_api_v1_WriteRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.WriteRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.WriteRelationshipsResponse> __Marshaller_authzed_api_v1_WriteRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.WriteRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.DeleteRelationshipsRequest> __Marshaller_authzed_api_v1_DeleteRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.DeleteRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.DeleteRelationshipsResponse> __Marshaller_authzed_api_v1_DeleteRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.DeleteRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.CheckPermissionRequest> __Marshaller_authzed_api_v1_CheckPermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.CheckPermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.CheckPermissionResponse> __Marshaller_authzed_api_v1_CheckPermissionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.CheckPermissionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.CheckBulkPermissionsRequest> __Marshaller_authzed_api_v1_CheckBulkPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.CheckBulkPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.CheckBulkPermissionsResponse> __Marshaller_authzed_api_v1_CheckBulkPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.CheckBulkPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ExpandPermissionTreeRequest> __Marshaller_authzed_api_v1_ExpandPermissionTreeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ExpandPermissionTreeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ExpandPermissionTreeResponse> __Marshaller_authzed_api_v1_ExpandPermissionTreeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ExpandPermissionTreeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.LookupResourcesRequest> __Marshaller_authzed_api_v1_LookupResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.LookupResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.LookupResourcesResponse> __Marshaller_authzed_api_v1_LookupResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.LookupResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.LookupSubjectsRequest> __Marshaller_authzed_api_v1_LookupSubjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.LookupSubjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.LookupSubjectsResponse> __Marshaller_authzed_api_v1_LookupSubjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.LookupSubjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ImportBulkRelationshipsRequest> __Marshaller_authzed_api_v1_ImportBulkRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ImportBulkRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ImportBulkRelationshipsResponse> __Marshaller_authzed_api_v1_ImportBulkRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ImportBulkRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ExportBulkRelationshipsRequest> __Marshaller_authzed_api_v1_ExportBulkRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ExportBulkRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.ExportBulkRelationshipsResponse> __Marshaller_authzed_api_v1_ExportBulkRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.ExportBulkRelationshipsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.ReadRelationshipsRequest, global::Authzed.Api.V1.ReadRelationshipsResponse> __Method_ReadRelationships = new grpc::Method<global::Authzed.Api.V1.ReadRelationshipsRequest, global::Authzed.Api.V1.ReadRelationshipsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReadRelationships",
        __Marshaller_authzed_api_v1_ReadRelationshipsRequest,
        __Marshaller_authzed_api_v1_ReadRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.WriteRelationshipsRequest, global::Authzed.Api.V1.WriteRelationshipsResponse> __Method_WriteRelationships = new grpc::Method<global::Authzed.Api.V1.WriteRelationshipsRequest, global::Authzed.Api.V1.WriteRelationshipsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WriteRelationships",
        __Marshaller_authzed_api_v1_WriteRelationshipsRequest,
        __Marshaller_authzed_api_v1_WriteRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.DeleteRelationshipsRequest, global::Authzed.Api.V1.DeleteRelationshipsResponse> __Method_DeleteRelationships = new grpc::Method<global::Authzed.Api.V1.DeleteRelationshipsRequest, global::Authzed.Api.V1.DeleteRelationshipsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRelationships",
        __Marshaller_authzed_api_v1_DeleteRelationshipsRequest,
        __Marshaller_authzed_api_v1_DeleteRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.CheckPermissionRequest, global::Authzed.Api.V1.CheckPermissionResponse> __Method_CheckPermission = new grpc::Method<global::Authzed.Api.V1.CheckPermissionRequest, global::Authzed.Api.V1.CheckPermissionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckPermission",
        __Marshaller_authzed_api_v1_CheckPermissionRequest,
        __Marshaller_authzed_api_v1_CheckPermissionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.CheckBulkPermissionsRequest, global::Authzed.Api.V1.CheckBulkPermissionsResponse> __Method_CheckBulkPermissions = new grpc::Method<global::Authzed.Api.V1.CheckBulkPermissionsRequest, global::Authzed.Api.V1.CheckBulkPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckBulkPermissions",
        __Marshaller_authzed_api_v1_CheckBulkPermissionsRequest,
        __Marshaller_authzed_api_v1_CheckBulkPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.ExpandPermissionTreeRequest, global::Authzed.Api.V1.ExpandPermissionTreeResponse> __Method_ExpandPermissionTree = new grpc::Method<global::Authzed.Api.V1.ExpandPermissionTreeRequest, global::Authzed.Api.V1.ExpandPermissionTreeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExpandPermissionTree",
        __Marshaller_authzed_api_v1_ExpandPermissionTreeRequest,
        __Marshaller_authzed_api_v1_ExpandPermissionTreeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.LookupResourcesRequest, global::Authzed.Api.V1.LookupResourcesResponse> __Method_LookupResources = new grpc::Method<global::Authzed.Api.V1.LookupResourcesRequest, global::Authzed.Api.V1.LookupResourcesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "LookupResources",
        __Marshaller_authzed_api_v1_LookupResourcesRequest,
        __Marshaller_authzed_api_v1_LookupResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.LookupSubjectsRequest, global::Authzed.Api.V1.LookupSubjectsResponse> __Method_LookupSubjects = new grpc::Method<global::Authzed.Api.V1.LookupSubjectsRequest, global::Authzed.Api.V1.LookupSubjectsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "LookupSubjects",
        __Marshaller_authzed_api_v1_LookupSubjectsRequest,
        __Marshaller_authzed_api_v1_LookupSubjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.ImportBulkRelationshipsRequest, global::Authzed.Api.V1.ImportBulkRelationshipsResponse> __Method_ImportBulkRelationships = new grpc::Method<global::Authzed.Api.V1.ImportBulkRelationshipsRequest, global::Authzed.Api.V1.ImportBulkRelationshipsResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "ImportBulkRelationships",
        __Marshaller_authzed_api_v1_ImportBulkRelationshipsRequest,
        __Marshaller_authzed_api_v1_ImportBulkRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.ExportBulkRelationshipsRequest, global::Authzed.Api.V1.ExportBulkRelationshipsResponse> __Method_ExportBulkRelationships = new grpc::Method<global::Authzed.Api.V1.ExportBulkRelationshipsRequest, global::Authzed.Api.V1.ExportBulkRelationshipsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ExportBulkRelationships",
        __Marshaller_authzed_api_v1_ExportBulkRelationshipsRequest,
        __Marshaller_authzed_api_v1_ExportBulkRelationshipsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Authzed.Api.V1.PermissionServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PermissionsService</summary>
    public partial class PermissionsServiceClient : grpc::ClientBase<PermissionsServiceClient>
    {
      /// <summary>Creates a new client for PermissionsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PermissionsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PermissionsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PermissionsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PermissionsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PermissionsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ReadRelationships reads a set of the relationships matching one or more
      /// filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.ReadRelationshipsResponse> ReadRelationships(global::Authzed.Api.V1.ReadRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadRelationships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadRelationships reads a set of the relationships matching one or more
      /// filters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.ReadRelationshipsResponse> ReadRelationships(global::Authzed.Api.V1.ReadRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReadRelationships, null, options, request);
      }
      /// <summary>
      /// WriteRelationships atomically writes and/or deletes a set of specified
      /// relationships. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.WriteRelationshipsResponse WriteRelationships(global::Authzed.Api.V1.WriteRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteRelationships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// WriteRelationships atomically writes and/or deletes a set of specified
      /// relationships. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.WriteRelationshipsResponse WriteRelationships(global::Authzed.Api.V1.WriteRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WriteRelationships, null, options, request);
      }
      /// <summary>
      /// WriteRelationships atomically writes and/or deletes a set of specified
      /// relationships. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.WriteRelationshipsResponse> WriteRelationshipsAsync(global::Authzed.Api.V1.WriteRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteRelationshipsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// WriteRelationships atomically writes and/or deletes a set of specified
      /// relationships. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.WriteRelationshipsResponse> WriteRelationshipsAsync(global::Authzed.Api.V1.WriteRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WriteRelationships, null, options, request);
      }
      /// <summary>
      /// DeleteRelationships atomically bulk deletes all relationships matching the
      /// provided filter. If no relationships match, none will be deleted and the
      /// operation will succeed. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.DeleteRelationshipsResponse DeleteRelationships(global::Authzed.Api.V1.DeleteRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRelationships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteRelationships atomically bulk deletes all relationships matching the
      /// provided filter. If no relationships match, none will be deleted and the
      /// operation will succeed. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.DeleteRelationshipsResponse DeleteRelationships(global::Authzed.Api.V1.DeleteRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRelationships, null, options, request);
      }
      /// <summary>
      /// DeleteRelationships atomically bulk deletes all relationships matching the
      /// provided filter. If no relationships match, none will be deleted and the
      /// operation will succeed. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.DeleteRelationshipsResponse> DeleteRelationshipsAsync(global::Authzed.Api.V1.DeleteRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRelationshipsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteRelationships atomically bulk deletes all relationships matching the
      /// provided filter. If no relationships match, none will be deleted and the
      /// operation will succeed. An optional set of preconditions can be provided that must
      /// be satisfied for the operation to commit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.DeleteRelationshipsResponse> DeleteRelationshipsAsync(global::Authzed.Api.V1.DeleteRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRelationships, null, options, request);
      }
      /// <summary>
      /// CheckPermission determines for a given resource whether a subject computes
      /// to having a permission or is a direct member of a particular relation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.CheckPermissionResponse CheckPermission(global::Authzed.Api.V1.CheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CheckPermission determines for a given resource whether a subject computes
      /// to having a permission or is a direct member of a particular relation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.CheckPermissionResponse CheckPermission(global::Authzed.Api.V1.CheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckPermission, null, options, request);
      }
      /// <summary>
      /// CheckPermission determines for a given resource whether a subject computes
      /// to having a permission or is a direct member of a particular relation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.CheckPermissionResponse> CheckPermissionAsync(global::Authzed.Api.V1.CheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CheckPermission determines for a given resource whether a subject computes
      /// to having a permission or is a direct member of a particular relation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.CheckPermissionResponse> CheckPermissionAsync(global::Authzed.Api.V1.CheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckPermission, null, options, request);
      }
      /// <summary>
      /// CheckBulkPermissions evaluates the given list of permission checks
      /// and returns the list of results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.CheckBulkPermissionsResponse CheckBulkPermissions(global::Authzed.Api.V1.CheckBulkPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckBulkPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CheckBulkPermissions evaluates the given list of permission checks
      /// and returns the list of results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.CheckBulkPermissionsResponse CheckBulkPermissions(global::Authzed.Api.V1.CheckBulkPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckBulkPermissions, null, options, request);
      }
      /// <summary>
      /// CheckBulkPermissions evaluates the given list of permission checks
      /// and returns the list of results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.CheckBulkPermissionsResponse> CheckBulkPermissionsAsync(global::Authzed.Api.V1.CheckBulkPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckBulkPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CheckBulkPermissions evaluates the given list of permission checks
      /// and returns the list of results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.CheckBulkPermissionsResponse> CheckBulkPermissionsAsync(global::Authzed.Api.V1.CheckBulkPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckBulkPermissions, null, options, request);
      }
      /// <summary>
      /// ExpandPermissionTree reveals the graph structure for a resource's
      /// permission or relation. This RPC does not recurse infinitely deep and may
      /// require multiple calls to fully unnest a deeply nested graph.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.ExpandPermissionTreeResponse ExpandPermissionTree(global::Authzed.Api.V1.ExpandPermissionTreeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExpandPermissionTree(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ExpandPermissionTree reveals the graph structure for a resource's
      /// permission or relation. This RPC does not recurse infinitely deep and may
      /// require multiple calls to fully unnest a deeply nested graph.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.ExpandPermissionTreeResponse ExpandPermissionTree(global::Authzed.Api.V1.ExpandPermissionTreeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExpandPermissionTree, null, options, request);
      }
      /// <summary>
      /// ExpandPermissionTree reveals the graph structure for a resource's
      /// permission or relation. This RPC does not recurse infinitely deep and may
      /// require multiple calls to fully unnest a deeply nested graph.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.ExpandPermissionTreeResponse> ExpandPermissionTreeAsync(global::Authzed.Api.V1.ExpandPermissionTreeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExpandPermissionTreeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ExpandPermissionTree reveals the graph structure for a resource's
      /// permission or relation. This RPC does not recurse infinitely deep and may
      /// require multiple calls to fully unnest a deeply nested graph.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.ExpandPermissionTreeResponse> ExpandPermissionTreeAsync(global::Authzed.Api.V1.ExpandPermissionTreeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExpandPermissionTree, null, options, request);
      }
      /// <summary>
      /// LookupResources returns all the resources of a given type that a subject
      /// can access whether via a computed permission or relation membership.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.LookupResourcesResponse> LookupResources(global::Authzed.Api.V1.LookupResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// LookupResources returns all the resources of a given type that a subject
      /// can access whether via a computed permission or relation membership.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.LookupResourcesResponse> LookupResources(global::Authzed.Api.V1.LookupResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_LookupResources, null, options, request);
      }
      /// <summary>
      /// LookupSubjects returns all the subjects of a given type that
      /// have access whether via a computed permission or relation membership.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.LookupSubjectsResponse> LookupSubjects(global::Authzed.Api.V1.LookupSubjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupSubjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// LookupSubjects returns all the subjects of a given type that
      /// have access whether via a computed permission or relation membership.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.LookupSubjectsResponse> LookupSubjects(global::Authzed.Api.V1.LookupSubjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_LookupSubjects, null, options, request);
      }
      /// <summary>
      /// ImportBulkRelationships is a faster path to writing a large number of
      /// relationships at once. It is both batched and streaming. For maximum
      /// performance, the caller should attempt to write relationships in as close
      /// to relationship sort order as possible: (resource.object_type,
      /// resource.object_id, relation, subject.object.object_type,
      /// subject.object.object_id, subject.optional_relation). All relationships
      /// written are done so under a single transaction.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Authzed.Api.V1.ImportBulkRelationshipsRequest, global::Authzed.Api.V1.ImportBulkRelationshipsResponse> ImportBulkRelationships(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportBulkRelationships(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ImportBulkRelationships is a faster path to writing a large number of
      /// relationships at once. It is both batched and streaming. For maximum
      /// performance, the caller should attempt to write relationships in as close
      /// to relationship sort order as possible: (resource.object_type,
      /// resource.object_id, relation, subject.object.object_type,
      /// subject.object.object_id, subject.optional_relation). All relationships
      /// written are done so under a single transaction.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Authzed.Api.V1.ImportBulkRelationshipsRequest, global::Authzed.Api.V1.ImportBulkRelationshipsResponse> ImportBulkRelationships(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_ImportBulkRelationships, null, options);
      }
      /// <summary>
      /// ExportBulkRelationships is the fastest path available to exporting
      /// relationships from the server. It is resumable, and will return results
      /// in an order determined by the server.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.ExportBulkRelationshipsResponse> ExportBulkRelationships(global::Authzed.Api.V1.ExportBulkRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportBulkRelationships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ExportBulkRelationships is the fastest path available to exporting
      /// relationships from the server. It is resumable, and will return results
      /// in an order determined by the server.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.ExportBulkRelationshipsResponse> ExportBulkRelationships(global::Authzed.Api.V1.ExportBulkRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ExportBulkRelationships, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PermissionsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PermissionsServiceClient(configuration);
      }
    }

  }
}
#endregion
