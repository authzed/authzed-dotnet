// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authzed/api/v1/debug.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Authzed.Api.V1 {

  /// <summary>Holder for reflection information generated from authzed/api/v1/debug.proto</summary>
  public static partial class DebugReflection {

    #region Descriptor
    /// <summary>File descriptor for authzed/api/v1/debug.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DebugReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChphdXRoemVkL2FwaS92MS9kZWJ1Zy5wcm90bxIOYXV0aHplZC5hcGkudjEa",
            "GWF1dGh6ZWQvYXBpL3YxL2NvcmUucHJvdG8aF3ZhbGlkYXRlL3ZhbGlkYXRl",
            "LnByb3RvGhxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvGh5nb29nbGUv",
            "cHJvdG9idWYvZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8iagoQRGVidWdJbmZvcm1hdGlvbhI1CgVjaGVjaxgBIAEo",
            "CzIfLmF1dGh6ZWQuYXBpLnYxLkNoZWNrRGVidWdUcmFjZVIFY2hlY2sSHwoL",
            "c2NoZW1hX3VzZWQYAiABKAlSCnNjaGVtYVVzZWQihQkKD0NoZWNrRGVidWdU",
            "cmFjZRJFCghyZXNvdXJjZRgBIAEoCzIfLmF1dGh6ZWQuYXBpLnYxLk9iamVj",
            "dFJlZmVyZW5jZUII+kIFigECEAFSCHJlc291cmNlEh4KCnBlcm1pc3Npb24Y",
            "AiABKAlSCnBlcm1pc3Npb24SYwoPcGVybWlzc2lvbl90eXBlGAMgASgOMi4u",
            "YXV0aHplZC5hcGkudjEuQ2hlY2tEZWJ1Z1RyYWNlLlBlcm1pc3Npb25UeXBl",
            "Qgr6QgeCAQQQASAAUg5wZXJtaXNzaW9uVHlwZRJECgdzdWJqZWN0GAQgASgL",
            "MiAuYXV0aHplZC5hcGkudjEuU3ViamVjdFJlZmVyZW5jZUII+kIFigECEAFS",
            "B3N1YmplY3QSUgoGcmVzdWx0GAUgASgOMi4uYXV0aHplZC5hcGkudjEuQ2hl",
            "Y2tEZWJ1Z1RyYWNlLlBlcm1pc3Npb25zaGlwQgr6QgeCAQQQASAAUgZyZXN1",
            "bHQSVAoWY2F2ZWF0X2V2YWx1YXRpb25faW5mbxgIIAEoCzIeLmF1dGh6ZWQu",
            "YXBpLnYxLkNhdmVhdEV2YWxJbmZvUhRjYXZlYXRFdmFsdWF0aW9uSW5mbxI1",
            "CghkdXJhdGlvbhgJIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvblII",
            "ZHVyYXRpb24SLAoRd2FzX2NhY2hlZF9yZXN1bHQYBiABKAhIAFIPd2FzQ2Fj",
            "aGVkUmVzdWx0ElAKDHN1Yl9wcm9ibGVtcxgHIAEoCzIrLmF1dGh6ZWQuYXBp",
            "LnYxLkNoZWNrRGVidWdUcmFjZS5TdWJQcm9ibGVtc0gAUgtzdWJQcm9ibGVt",
            "cxJKChNvcHRpb25hbF9leHBpcmVzX2F0GAogASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcFIRb3B0aW9uYWxFeHBpcmVzQXQSLAoSdHJhY2Vfb3Bl",
            "cmF0aW9uX2lkGAsgASgJUhB0cmFjZU9wZXJhdGlvbklkEhYKBnNvdXJjZRgM",
            "IAEoCVIGc291cmNlGkYKC1N1YlByb2JsZW1zEjcKBnRyYWNlcxgBIAMoCzIf",
            "LmF1dGh6ZWQuYXBpLnYxLkNoZWNrRGVidWdUcmFjZVIGdHJhY2VzIm8KDlBl",
            "cm1pc3Npb25UeXBlEh8KG1BFUk1JU1NJT05fVFlQRV9VTlNQRUNJRklFRBAA",
            "EhwKGFBFUk1JU1NJT05fVFlQRV9SRUxBVElPThABEh4KGlBFUk1JU1NJT05f",
            "VFlQRV9QRVJNSVNTSU9OEAIioAEKDlBlcm1pc3Npb25zaGlwEh4KGlBFUk1J",
            "U1NJT05TSElQX1VOU1BFQ0lGSUVEEAASIAocUEVSTUlTU0lPTlNISVBfTk9f",
            "UEVSTUlTU0lPThABEiEKHVBFUk1JU1NJT05TSElQX0hBU19QRVJNSVNTSU9O",
            "EAISKQolUEVSTUlTU0lPTlNISVBfQ09ORElUSU9OQUxfUEVSTUlTU0lPThAD",
            "QhEKCnJlc29sdXRpb24SA/hCASKUAwoOQ2F2ZWF0RXZhbEluZm8SHgoKZXhw",
            "cmVzc2lvbhgBIAEoCVIKZXhwcmVzc2lvbhI9CgZyZXN1bHQYAiABKA4yJS5h",
            "dXRoemVkLmFwaS52MS5DYXZlYXRFdmFsSW5mby5SZXN1bHRSBnJlc3VsdBIx",
            "Cgdjb250ZXh0GAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdFIHY29u",
            "dGV4dBJRChNwYXJ0aWFsX2NhdmVhdF9pbmZvGAQgASgLMiEuYXV0aHplZC5h",
            "cGkudjEuUGFydGlhbENhdmVhdEluZm9SEXBhcnRpYWxDYXZlYXRJbmZvEh8K",
            "C2NhdmVhdF9uYW1lGAUgASgJUgpjYXZlYXROYW1lInwKBlJlc3VsdBIWChJS",
            "RVNVTFRfVU5TUEVDSUZJRUQQABIWChJSRVNVTFRfVU5FVkFMVUFURUQQARIQ",
            "CgxSRVNVTFRfRkFMU0UQAhIPCgtSRVNVTFRfVFJVRRADEh8KG1JFU1VMVF9N",
            "SVNTSU5HX1NPTUVfQ09OVEVYVBAEQkoKEmNvbS5hdXRoemVkLmFwaS52MVAB",
            "WjJnaXRodWIuY29tL2F1dGh6ZWQvYXV0aHplZC1nby9wcm90by9hdXRoemVk",
            "L2FwaS92MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Authzed.Api.V1.CoreReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Authzed.Api.V1.DebugInformation), global::Authzed.Api.V1.DebugInformation.Parser, new[]{ "Check", "SchemaUsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Authzed.Api.V1.CheckDebugTrace), global::Authzed.Api.V1.CheckDebugTrace.Parser, new[]{ "Resource", "Permission", "PermissionType", "Subject", "Result", "CaveatEvaluationInfo", "Duration", "WasCachedResult", "SubProblems", "OptionalExpiresAt", "TraceOperationId", "Source" }, new[]{ "Resolution" }, new[]{ typeof(global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType), typeof(global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems), global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems.Parser, new[]{ "Traces" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Authzed.Api.V1.CaveatEvalInfo), global::Authzed.Api.V1.CaveatEvalInfo.Parser, new[]{ "Expression", "Result", "Context", "PartialCaveatInfo", "CaveatName" }, null, new[]{ typeof(global::Authzed.Api.V1.CaveatEvalInfo.Types.Result) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// DebugInformation defines debug information returned by an API call in a footer when
  /// requested with a specific debugging header.
  ///
  /// The specific debug information returned will depend on the type of the API call made.
  ///
  /// See the github.com/authzed/authzed-go project for the specific header and footer names.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DebugInformation : pb::IMessage<DebugInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DebugInformation> _parser = new pb::MessageParser<DebugInformation>(() => new DebugInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DebugInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Authzed.Api.V1.DebugReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugInformation(DebugInformation other) : this() {
      check_ = other.check_ != null ? other.check_.Clone() : null;
      schemaUsed_ = other.schemaUsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugInformation Clone() {
      return new DebugInformation(this);
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 1;
    private global::Authzed.Api.V1.CheckDebugTrace check_;
    /// <summary>
    /// check holds debug information about a check request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CheckDebugTrace Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "schema_used" field.</summary>
    public const int SchemaUsedFieldNumber = 2;
    private string schemaUsed_ = "";
    /// <summary>
    /// schema_used holds the schema used for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaUsed {
      get { return schemaUsed_; }
      set {
        schemaUsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DebugInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DebugInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Check, other.Check)) return false;
      if (SchemaUsed != other.SchemaUsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (check_ != null) hash ^= Check.GetHashCode();
      if (SchemaUsed.Length != 0) hash ^= SchemaUsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (check_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Check);
      }
      if (SchemaUsed.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (check_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Check);
      }
      if (SchemaUsed.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (SchemaUsed.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaUsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DebugInformation other) {
      if (other == null) {
        return;
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::Authzed.Api.V1.CheckDebugTrace();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.SchemaUsed.Length != 0) {
        SchemaUsed = other.SchemaUsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (check_ == null) {
              Check = new global::Authzed.Api.V1.CheckDebugTrace();
            }
            input.ReadMessage(Check);
            break;
          }
          case 18: {
            SchemaUsed = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (check_ == null) {
              Check = new global::Authzed.Api.V1.CheckDebugTrace();
            }
            input.ReadMessage(Check);
            break;
          }
          case 18: {
            SchemaUsed = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CheckDebugTrace is a recursive trace of the requests made for resolving a CheckPermission
  /// API call.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CheckDebugTrace : pb::IMessage<CheckDebugTrace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckDebugTrace> _parser = new pb::MessageParser<CheckDebugTrace>(() => new CheckDebugTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckDebugTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Authzed.Api.V1.DebugReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckDebugTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckDebugTrace(CheckDebugTrace other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      permission_ = other.permission_;
      permissionType_ = other.permissionType_;
      subject_ = other.subject_ != null ? other.subject_.Clone() : null;
      result_ = other.result_;
      caveatEvaluationInfo_ = other.caveatEvaluationInfo_ != null ? other.caveatEvaluationInfo_.Clone() : null;
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      optionalExpiresAt_ = other.optionalExpiresAt_ != null ? other.optionalExpiresAt_.Clone() : null;
      traceOperationId_ = other.traceOperationId_;
      source_ = other.source_;
      switch (other.ResolutionCase) {
        case ResolutionOneofCase.WasCachedResult:
          WasCachedResult = other.WasCachedResult;
          break;
        case ResolutionOneofCase.SubProblems:
          SubProblems = other.SubProblems.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckDebugTrace Clone() {
      return new CheckDebugTrace(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::Authzed.Api.V1.ObjectReference resource_;
    /// <summary>
    /// resource holds the resource on which the Check was performed.
    /// for batched calls, the object_id field contains a comma-separated list of object IDs
    /// for all the resources checked in the batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.ObjectReference Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 2;
    private string permission_ = "";
    /// <summary>
    /// permission holds the name of the permission or relation on which the Check was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Permission {
      get { return permission_; }
      set {
        permission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permission_type" field.</summary>
    public const int PermissionTypeFieldNumber = 3;
    private global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType permissionType_ = global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified;
    /// <summary>
    /// permission_type holds information indicating whether it was a permission or relation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType PermissionType {
      get { return permissionType_; }
      set {
        permissionType_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 4;
    private global::Authzed.Api.V1.SubjectReference subject_;
    /// <summary>
    /// subject holds the subject on which the Check was performed. This will be static across all calls within
    /// the same Check tree.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.SubjectReference Subject {
      get { return subject_; }
      set {
        subject_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 5;
    private global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship result_ = global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified;
    /// <summary>
    /// result holds the result of the Check call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "caveat_evaluation_info" field.</summary>
    public const int CaveatEvaluationInfoFieldNumber = 8;
    private global::Authzed.Api.V1.CaveatEvalInfo caveatEvaluationInfo_;
    /// <summary>
    /// caveat_evaluation_info holds information about the caveat evaluated for this step of the trace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CaveatEvalInfo CaveatEvaluationInfo {
      get { return caveatEvaluationInfo_; }
      set {
        caveatEvaluationInfo_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// duration holds the time spent executing this Check operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "was_cached_result" field.</summary>
    public const int WasCachedResultFieldNumber = 6;
    /// <summary>
    /// was_cached_result, if true, indicates that the result was found in the cache and returned directly.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WasCachedResult {
      get { return HasWasCachedResult ? (bool) resolution_ : false; }
      set {
        resolution_ = value;
        resolutionCase_ = ResolutionOneofCase.WasCachedResult;
      }
    }
    /// <summary>Gets whether the "was_cached_result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWasCachedResult {
      get { return resolutionCase_ == ResolutionOneofCase.WasCachedResult; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "was_cached_result" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWasCachedResult() {
      if (HasWasCachedResult) {
        ClearResolution();
      }
    }

    /// <summary>Field number for the "sub_problems" field.</summary>
    public const int SubProblemsFieldNumber = 7;
    /// <summary>
    /// sub_problems holds the sub problems that were executed to resolve the answer to this Check. An empty list
    /// and a permissionship of PERMISSIONSHIP_HAS_PERMISSION indicates the subject was found within this relation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems SubProblems {
      get { return resolutionCase_ == ResolutionOneofCase.SubProblems ? (global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems) resolution_ : null; }
      set {
        resolution_ = value;
        resolutionCase_ = value == null ? ResolutionOneofCase.None : ResolutionOneofCase.SubProblems;
      }
    }

    /// <summary>Field number for the "optional_expires_at" field.</summary>
    public const int OptionalExpiresAtFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp optionalExpiresAt_;
    /// <summary>
    /// optional_expires_at is the time at which at least one of the relationships used to
    /// compute this result, expires (if any). This is *not* related to the caching window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OptionalExpiresAt {
      get { return optionalExpiresAt_; }
      set {
        optionalExpiresAt_ = value;
      }
    }

    /// <summary>Field number for the "trace_operation_id" field.</summary>
    public const int TraceOperationIdFieldNumber = 11;
    private string traceOperationId_ = "";
    /// <summary>
    /// trace_operation_id is a unique identifier for this trace's operation, that will
    /// be shared for all traces created for the same check operation in SpiceDB.
    ///
    /// In cases where SpiceDB performs automatic batching of subproblems, this ID can be used
    /// to correlate work that was shared across multiple traces.
    ///
    /// This identifier is generated by SpiceDB, is to be considered opaque to the caller
    /// and only guaranteed to be unique within the same overall Check or CheckBulk operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TraceOperationId {
      get { return traceOperationId_; }
      set {
        traceOperationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 12;
    private string source_ = "";
    /// <summary>
    /// source holds the source of the result. It is of the form:
    /// `&lt;sourcetype>:&lt;sourceid>`, where sourcetype can be, among others:
    /// `spicedb`, `materialize`, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object resolution_;
    /// <summary>Enum of possible cases for the "resolution" oneof.</summary>
    public enum ResolutionOneofCase {
      None = 0,
      WasCachedResult = 6,
      SubProblems = 7,
    }
    private ResolutionOneofCase resolutionCase_ = ResolutionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResolutionOneofCase ResolutionCase {
      get { return resolutionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      resolutionCase_ = ResolutionOneofCase.None;
      resolution_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckDebugTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckDebugTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if (Permission != other.Permission) return false;
      if (PermissionType != other.PermissionType) return false;
      if (!object.Equals(Subject, other.Subject)) return false;
      if (Result != other.Result) return false;
      if (!object.Equals(CaveatEvaluationInfo, other.CaveatEvaluationInfo)) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      if (WasCachedResult != other.WasCachedResult) return false;
      if (!object.Equals(SubProblems, other.SubProblems)) return false;
      if (!object.Equals(OptionalExpiresAt, other.OptionalExpiresAt)) return false;
      if (TraceOperationId != other.TraceOperationId) return false;
      if (Source != other.Source) return false;
      if (ResolutionCase != other.ResolutionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (Permission.Length != 0) hash ^= Permission.GetHashCode();
      if (PermissionType != global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified) hash ^= PermissionType.GetHashCode();
      if (subject_ != null) hash ^= Subject.GetHashCode();
      if (Result != global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified) hash ^= Result.GetHashCode();
      if (caveatEvaluationInfo_ != null) hash ^= CaveatEvaluationInfo.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (HasWasCachedResult) hash ^= WasCachedResult.GetHashCode();
      if (resolutionCase_ == ResolutionOneofCase.SubProblems) hash ^= SubProblems.GetHashCode();
      if (optionalExpiresAt_ != null) hash ^= OptionalExpiresAt.GetHashCode();
      if (TraceOperationId.Length != 0) hash ^= TraceOperationId.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      hash ^= (int) resolutionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (Permission.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Permission);
      }
      if (PermissionType != global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PermissionType);
      }
      if (subject_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Subject);
      }
      if (Result != global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Result);
      }
      if (HasWasCachedResult) {
        output.WriteRawTag(48);
        output.WriteBool(WasCachedResult);
      }
      if (resolutionCase_ == ResolutionOneofCase.SubProblems) {
        output.WriteRawTag(58);
        output.WriteMessage(SubProblems);
      }
      if (caveatEvaluationInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CaveatEvaluationInfo);
      }
      if (duration_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Duration);
      }
      if (optionalExpiresAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(OptionalExpiresAt);
      }
      if (TraceOperationId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TraceOperationId);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (Permission.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Permission);
      }
      if (PermissionType != global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PermissionType);
      }
      if (subject_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Subject);
      }
      if (Result != global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Result);
      }
      if (HasWasCachedResult) {
        output.WriteRawTag(48);
        output.WriteBool(WasCachedResult);
      }
      if (resolutionCase_ == ResolutionOneofCase.SubProblems) {
        output.WriteRawTag(58);
        output.WriteMessage(SubProblems);
      }
      if (caveatEvaluationInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CaveatEvaluationInfo);
      }
      if (duration_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Duration);
      }
      if (optionalExpiresAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(OptionalExpiresAt);
      }
      if (TraceOperationId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TraceOperationId);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (Permission.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Permission);
      }
      if (PermissionType != global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PermissionType);
      }
      if (subject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subject);
      }
      if (Result != global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (caveatEvaluationInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaveatEvaluationInfo);
      }
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (HasWasCachedResult) {
        size += 1 + 1;
      }
      if (resolutionCase_ == ResolutionOneofCase.SubProblems) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubProblems);
      }
      if (optionalExpiresAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OptionalExpiresAt);
      }
      if (TraceOperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraceOperationId);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckDebugTrace other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Authzed.Api.V1.ObjectReference();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.Permission.Length != 0) {
        Permission = other.Permission;
      }
      if (other.PermissionType != global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType.Unspecified) {
        PermissionType = other.PermissionType;
      }
      if (other.subject_ != null) {
        if (subject_ == null) {
          Subject = new global::Authzed.Api.V1.SubjectReference();
        }
        Subject.MergeFrom(other.Subject);
      }
      if (other.Result != global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship.Unspecified) {
        Result = other.Result;
      }
      if (other.caveatEvaluationInfo_ != null) {
        if (caveatEvaluationInfo_ == null) {
          CaveatEvaluationInfo = new global::Authzed.Api.V1.CaveatEvalInfo();
        }
        CaveatEvaluationInfo.MergeFrom(other.CaveatEvaluationInfo);
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.optionalExpiresAt_ != null) {
        if (optionalExpiresAt_ == null) {
          OptionalExpiresAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OptionalExpiresAt.MergeFrom(other.OptionalExpiresAt);
      }
      if (other.TraceOperationId.Length != 0) {
        TraceOperationId = other.TraceOperationId;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      switch (other.ResolutionCase) {
        case ResolutionOneofCase.WasCachedResult:
          WasCachedResult = other.WasCachedResult;
          break;
        case ResolutionOneofCase.SubProblems:
          if (SubProblems == null) {
            SubProblems = new global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems();
          }
          SubProblems.MergeFrom(other.SubProblems);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              Resource = new global::Authzed.Api.V1.ObjectReference();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 18: {
            Permission = input.ReadString();
            break;
          }
          case 24: {
            PermissionType = (global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (subject_ == null) {
              Subject = new global::Authzed.Api.V1.SubjectReference();
            }
            input.ReadMessage(Subject);
            break;
          }
          case 40: {
            Result = (global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship) input.ReadEnum();
            break;
          }
          case 48: {
            WasCachedResult = input.ReadBool();
            break;
          }
          case 58: {
            global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems subBuilder = new global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems();
            if (resolutionCase_ == ResolutionOneofCase.SubProblems) {
              subBuilder.MergeFrom(SubProblems);
            }
            input.ReadMessage(subBuilder);
            SubProblems = subBuilder;
            break;
          }
          case 66: {
            if (caveatEvaluationInfo_ == null) {
              CaveatEvaluationInfo = new global::Authzed.Api.V1.CaveatEvalInfo();
            }
            input.ReadMessage(CaveatEvaluationInfo);
            break;
          }
          case 74: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 82: {
            if (optionalExpiresAt_ == null) {
              OptionalExpiresAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OptionalExpiresAt);
            break;
          }
          case 90: {
            TraceOperationId = input.ReadString();
            break;
          }
          case 98: {
            Source = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (resource_ == null) {
              Resource = new global::Authzed.Api.V1.ObjectReference();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 18: {
            Permission = input.ReadString();
            break;
          }
          case 24: {
            PermissionType = (global::Authzed.Api.V1.CheckDebugTrace.Types.PermissionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (subject_ == null) {
              Subject = new global::Authzed.Api.V1.SubjectReference();
            }
            input.ReadMessage(Subject);
            break;
          }
          case 40: {
            Result = (global::Authzed.Api.V1.CheckDebugTrace.Types.Permissionship) input.ReadEnum();
            break;
          }
          case 48: {
            WasCachedResult = input.ReadBool();
            break;
          }
          case 58: {
            global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems subBuilder = new global::Authzed.Api.V1.CheckDebugTrace.Types.SubProblems();
            if (resolutionCase_ == ResolutionOneofCase.SubProblems) {
              subBuilder.MergeFrom(SubProblems);
            }
            input.ReadMessage(subBuilder);
            SubProblems = subBuilder;
            break;
          }
          case 66: {
            if (caveatEvaluationInfo_ == null) {
              CaveatEvaluationInfo = new global::Authzed.Api.V1.CaveatEvalInfo();
            }
            input.ReadMessage(CaveatEvaluationInfo);
            break;
          }
          case 74: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 82: {
            if (optionalExpiresAt_ == null) {
              OptionalExpiresAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OptionalExpiresAt);
            break;
          }
          case 90: {
            TraceOperationId = input.ReadString();
            break;
          }
          case 98: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CheckDebugTrace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PermissionType {
        [pbr::OriginalName("PERMISSION_TYPE_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("PERMISSION_TYPE_RELATION")] Relation = 1,
        [pbr::OriginalName("PERMISSION_TYPE_PERMISSION")] Permission = 2,
      }

      public enum Permissionship {
        [pbr::OriginalName("PERMISSIONSHIP_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("PERMISSIONSHIP_NO_PERMISSION")] NoPermission = 1,
        [pbr::OriginalName("PERMISSIONSHIP_HAS_PERMISSION")] HasPermission = 2,
        [pbr::OriginalName("PERMISSIONSHIP_CONDITIONAL_PERMISSION")] ConditionalPermission = 3,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class SubProblems : pb::IMessage<SubProblems>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SubProblems> _parser = new pb::MessageParser<SubProblems>(() => new SubProblems());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SubProblems> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Authzed.Api.V1.CheckDebugTrace.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubProblems() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubProblems(SubProblems other) : this() {
          traces_ = other.traces_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SubProblems Clone() {
          return new SubProblems(this);
        }

        /// <summary>Field number for the "traces" field.</summary>
        public const int TracesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Authzed.Api.V1.CheckDebugTrace> _repeated_traces_codec
            = pb::FieldCodec.ForMessage(10, global::Authzed.Api.V1.CheckDebugTrace.Parser);
        private readonly pbc::RepeatedField<global::Authzed.Api.V1.CheckDebugTrace> traces_ = new pbc::RepeatedField<global::Authzed.Api.V1.CheckDebugTrace>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Authzed.Api.V1.CheckDebugTrace> Traces {
          get { return traces_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SubProblems);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SubProblems other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!traces_.Equals(other.traces_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= traces_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          traces_.WriteTo(output, _repeated_traces_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          traces_.WriteTo(ref output, _repeated_traces_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += traces_.CalculateSize(_repeated_traces_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SubProblems other) {
          if (other == null) {
            return;
          }
          traces_.Add(other.traces_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                traces_.AddEntriesFrom(input, _repeated_traces_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                traces_.AddEntriesFrom(ref input, _repeated_traces_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// CaveatEvalInfo holds information about a caveat expression that was evaluated.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CaveatEvalInfo : pb::IMessage<CaveatEvalInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CaveatEvalInfo> _parser = new pb::MessageParser<CaveatEvalInfo>(() => new CaveatEvalInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CaveatEvalInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Authzed.Api.V1.DebugReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaveatEvalInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaveatEvalInfo(CaveatEvalInfo other) : this() {
      expression_ = other.expression_;
      result_ = other.result_;
      context_ = other.context_ != null ? other.context_.Clone() : null;
      partialCaveatInfo_ = other.partialCaveatInfo_ != null ? other.partialCaveatInfo_.Clone() : null;
      caveatName_ = other.caveatName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaveatEvalInfo Clone() {
      return new CaveatEvalInfo(this);
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 1;
    private string expression_ = "";
    /// <summary>
    /// expression is the expression that was evaluated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Authzed.Api.V1.CaveatEvalInfo.Types.Result result_ = global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified;
    /// <summary>
    /// result is the result of the evaluation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.CaveatEvalInfo.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Struct context_;
    /// <summary>
    /// context consists of any named values that were used for evaluating the caveat expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "partial_caveat_info" field.</summary>
    public const int PartialCaveatInfoFieldNumber = 4;
    private global::Authzed.Api.V1.PartialCaveatInfo partialCaveatInfo_;
    /// <summary>
    /// partial_caveat_info holds information of a partially-evaluated caveated response, if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Authzed.Api.V1.PartialCaveatInfo PartialCaveatInfo {
      get { return partialCaveatInfo_; }
      set {
        partialCaveatInfo_ = value;
      }
    }

    /// <summary>Field number for the "caveat_name" field.</summary>
    public const int CaveatNameFieldNumber = 5;
    private string caveatName_ = "";
    /// <summary>
    /// caveat_name is the name of the caveat that was executed, if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CaveatName {
      get { return caveatName_; }
      set {
        caveatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CaveatEvalInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CaveatEvalInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expression != other.Expression) return false;
      if (Result != other.Result) return false;
      if (!object.Equals(Context, other.Context)) return false;
      if (!object.Equals(PartialCaveatInfo, other.PartialCaveatInfo)) return false;
      if (CaveatName != other.CaveatName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Result != global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified) hash ^= Result.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      if (partialCaveatInfo_ != null) hash ^= PartialCaveatInfo.GetHashCode();
      if (CaveatName.Length != 0) hash ^= CaveatName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (Result != global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (partialCaveatInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PartialCaveatInfo);
      }
      if (CaveatName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CaveatName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (Result != global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (partialCaveatInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PartialCaveatInfo);
      }
      if (CaveatName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CaveatName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Result != global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (partialCaveatInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartialCaveatInfo);
      }
      if (CaveatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CaveatName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CaveatEvalInfo other) {
      if (other == null) {
        return;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Result != global::Authzed.Api.V1.CaveatEvalInfo.Types.Result.Unspecified) {
        Result = other.Result;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.partialCaveatInfo_ != null) {
        if (partialCaveatInfo_ == null) {
          PartialCaveatInfo = new global::Authzed.Api.V1.PartialCaveatInfo();
        }
        PartialCaveatInfo.MergeFrom(other.PartialCaveatInfo);
      }
      if (other.CaveatName.Length != 0) {
        CaveatName = other.CaveatName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
          case 16: {
            Result = (global::Authzed.Api.V1.CaveatEvalInfo.Types.Result) input.ReadEnum();
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Context);
            break;
          }
          case 34: {
            if (partialCaveatInfo_ == null) {
              PartialCaveatInfo = new global::Authzed.Api.V1.PartialCaveatInfo();
            }
            input.ReadMessage(PartialCaveatInfo);
            break;
          }
          case 42: {
            CaveatName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
          case 16: {
            Result = (global::Authzed.Api.V1.CaveatEvalInfo.Types.Result) input.ReadEnum();
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Context);
            break;
          }
          case 34: {
            if (partialCaveatInfo_ == null) {
              PartialCaveatInfo = new global::Authzed.Api.V1.PartialCaveatInfo();
            }
            input.ReadMessage(PartialCaveatInfo);
            break;
          }
          case 42: {
            CaveatName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CaveatEvalInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("RESULT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("RESULT_UNEVALUATED")] Unevaluated = 1,
        [pbr::OriginalName("RESULT_FALSE")] False = 2,
        [pbr::OriginalName("RESULT_TRUE")] True = 3,
        [pbr::OriginalName("RESULT_MISSING_SOME_CONTEXT")] MissingSomeContext = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
